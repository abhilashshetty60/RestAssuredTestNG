<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="100" passed="94" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-16T11:23:52 IST" name="Default suite" finished-at="2022-09-16T11:28:01 IST" duration-ms="248898">
    <groups>
    </groups>
    <test started-at="2022-09-16T11:23:52 IST" name="Default test" finished-at="2022-09-16T11:28:01 IST" duration-ms="248898">
      <class name="prac1.com.MedicationRequest">
        <test-method signature="Test_Case1()[pri:1, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:26:39 IST" name="Test_Case1" finished-at="2022-09-16T11:26:41 IST" duration-ms="1876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case1 -->
        <test-method signature="Test_Case2()[pri:2, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:26:41 IST" name="Test_Case2" finished-at="2022-09-16T11:26:46 IST" duration-ms="5207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case2 -->
        <test-method signature="Test_Case3()[pri:3, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:26:46 IST" name="Test_Case3" finished-at="2022-09-16T11:26:48 IST" duration-ms="1375" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at prac1.com.Common_Method.get(Common_Method.java:23)
at prac1.com.MedicationRequest.Test_Case3(MedicationRequest.java:58)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case3 -->
        <test-method signature="Test_Case4()[pri:4, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:26:48 IST" name="Test_Case4" finished-at="2022-09-16T11:26:49 IST" duration-ms="1463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case4 -->
        <test-method signature="Test_Case5()[pri:5, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:26:49 IST" name="Test_Case5" finished-at="2022-09-16T11:26:50 IST" duration-ms="1306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case5 -->
        <test-method signature="Test_Case6()[pri:6, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:26:50 IST" name="Test_Case6" finished-at="2022-09-16T11:26:52 IST" duration-ms="1897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case6 -->
        <test-method signature="Test_Case7()[pri:7, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:26:52 IST" name="Test_Case7" finished-at="2022-09-16T11:26:54 IST" duration-ms="1645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case7 -->
        <test-method signature="Test_Case8()[pri:8, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:26:54 IST" name="Test_Case8" finished-at="2022-09-16T11:26:56 IST" duration-ms="2563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case8 -->
        <test-method signature="Test_Case9()[pri:9, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:26:56 IST" name="Test_Case9" finished-at="2022-09-16T11:26:58 IST" duration-ms="2041" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at prac1.com.Common_Method.get(Common_Method.java:23)
at prac1.com.MedicationRequest.Test_Case9(MedicationRequest.java:132)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case9 -->
        <test-method signature="Test_Case10()[pri:10, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:26:59 IST" name="Test_Case10" finished-at="2022-09-16T11:27:00 IST" duration-ms="1897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case10 -->
        <test-method signature="Test_Case11()[pri:11, instance:prac1.com.MedicationRequest@6c65860d]" started-at="2022-09-16T11:27:00 IST" name="Test_Case11" finished-at="2022-09-16T11:27:02 IST" duration-ms="1846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case11 -->
      </class> <!-- prac1.com.MedicationRequest -->
      <class name="prac1.com.Observation">
        <test-method signature="Test_Case1()[pri:1, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:23:52 IST" name="Test_Case1" finished-at="2022-09-16T11:24:07 IST" duration-ms="14081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case1 -->
        <test-method signature="Test_Case2()[pri:2, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:07 IST" name="Test_Case2" finished-at="2022-09-16T11:24:26 IST" duration-ms="19165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case2 -->
        <test-method signature="Test_Case3()[pri:3, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:26 IST" name="Test_Case3" finished-at="2022-09-16T11:24:27 IST" duration-ms="1478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case3 -->
        <test-method signature="Test_Case4()[pri:4, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:27 IST" name="Test_Case4" finished-at="2022-09-16T11:24:29 IST" duration-ms="1421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case4 -->
        <test-method signature="Test_Case5()[pri:5, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:29 IST" name="Test_Case5" finished-at="2022-09-16T11:24:30 IST" duration-ms="1420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case5 -->
        <test-method signature="Test_Case6()[pri:6, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:30 IST" name="Test_Case6" finished-at="2022-09-16T11:24:32 IST" duration-ms="1741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case6 -->
        <test-method signature="Test_Case7()[pri:7, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:32 IST" name="Test_Case7" finished-at="2022-09-16T11:24:33 IST" duration-ms="1493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case7 -->
        <test-method signature="Test_Case8()[pri:8, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:33 IST" name="Test_Case8" finished-at="2022-09-16T11:24:40 IST" duration-ms="6527" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at prac1.com.Common_Method.get(Common_Method.java:23)
at prac1.com.Observation.Test_Case8(Observation.java:117)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case8 -->
        <test-method signature="Test_Case9()[pri:9, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:40 IST" name="Test_Case9" finished-at="2022-09-16T11:24:42 IST" duration-ms="1717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case9 -->
        <test-method signature="Test_Case10()[pri:10, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:42 IST" name="Test_Case10" finished-at="2022-09-16T11:24:44 IST" duration-ms="1836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case10 -->
        <test-method signature="Test_Case11()[pri:11, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:44 IST" name="Test_Case11" finished-at="2022-09-16T11:24:45 IST" duration-ms="1598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case11 -->
        <test-method signature="Test_Case12()[pri:12, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:45 IST" name="Test_Case12" finished-at="2022-09-16T11:24:47 IST" duration-ms="1515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case12 -->
        <test-method signature="Test_Case13()[pri:13, instance:prac1.com.Observation@6ee8dcd3]" started-at="2022-09-16T11:24:47 IST" name="Test_Case13" finished-at="2022-09-16T11:24:48 IST" duration-ms="1688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case13 -->
      </class> <!-- prac1.com.Observation -->
      <class name="prac1.com.AllergyIntolerance">
        <test-method signature="Test_Case1()[pri:1, instance:prac1.com.AllergyIntolerance@78b41097]" started-at="2022-09-16T11:24:48 IST" name="Test_Case1" finished-at="2022-09-16T11:24:50 IST" duration-ms="1749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case1 -->
        <test-method signature="Test_Case2()[pri:2, instance:prac1.com.AllergyIntolerance@78b41097]" started-at="2022-09-16T11:24:50 IST" name="Test_Case2" finished-at="2022-09-16T11:24:52 IST" duration-ms="1490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case2 -->
        <test-method signature="Test_Case3()[pri:3, instance:prac1.com.AllergyIntolerance@78b41097]" started-at="2022-09-16T11:24:52 IST" name="Test_Case3" finished-at="2022-09-16T11:24:53 IST" duration-ms="1664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case3 -->
        <test-method signature="Test_Case4()[pri:4, instance:prac1.com.AllergyIntolerance@78b41097]" started-at="2022-09-16T11:24:53 IST" name="Test_Case4" finished-at="2022-09-16T11:24:55 IST" duration-ms="1735" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case4 -->
        <test-method signature="Test_Case5()[pri:5, instance:prac1.com.AllergyIntolerance@78b41097]" started-at="2022-09-16T11:24:55 IST" name="Test_Case5" finished-at="2022-09-16T11:24:57 IST" duration-ms="1546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case5 -->
        <test-method signature="Test_Case6()[pri:6, instance:prac1.com.AllergyIntolerance@78b41097]" started-at="2022-09-16T11:24:57 IST" name="Test_Case6" finished-at="2022-09-16T11:24:58 IST" duration-ms="1605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case6 -->
      </class> <!-- prac1.com.AllergyIntolerance -->
      <class name="prac1.com.ServiceRequest">
        <test-method signature="Test_Case1()[pri:1, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:02 IST" name="Test_Case1" finished-at="2022-09-16T11:27:04 IST" duration-ms="2066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case1 -->
        <test-method signature="Test_Case2()[pri:2, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:04 IST" name="Test_Case2" finished-at="2022-09-16T11:27:08 IST" duration-ms="3252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case2 -->
        <test-method signature="Test_Case3()[pri:3, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:08 IST" name="Test_Case3" finished-at="2022-09-16T11:27:09 IST" duration-ms="1546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case3 -->
        <test-method signature="Test_Case4()[pri:4, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:09 IST" name="Test_Case4" finished-at="2022-09-16T11:27:11 IST" duration-ms="1836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case4 -->
        <test-method signature="Test_Case5()[pri:5, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:11 IST" name="Test_Case5" finished-at="2022-09-16T11:27:13 IST" duration-ms="1536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case5 -->
        <test-method signature="Test_Case7()[pri:7, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:13 IST" name="Test_Case7" finished-at="2022-09-16T11:27:14 IST" duration-ms="1758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case7 -->
        <test-method signature="Test_Case8()[pri:8, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:14 IST" name="Test_Case8" finished-at="2022-09-16T11:27:16 IST" duration-ms="1545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case8 -->
        <test-method signature="Test_Case9()[pri:9, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:16 IST" name="Test_Case9" finished-at="2022-09-16T11:27:18 IST" duration-ms="1683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case9 -->
        <test-method signature="Test_Case10()[pri:10, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:18 IST" name="Test_Case10" finished-at="2022-09-16T11:27:19 IST" duration-ms="1503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case10 -->
        <test-method signature="Test_Case11()[pri:11, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:19 IST" name="Test_Case11" finished-at="2022-09-16T11:27:21 IST" duration-ms="1416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case11 -->
        <test-method signature="Test_Case12()[pri:12, instance:prac1.com.ServiceRequest@7cf283e1]" started-at="2022-09-16T11:27:21 IST" name="Test_Case12" finished-at="2022-09-16T11:27:22 IST" duration-ms="1535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case12 -->
      </class> <!-- prac1.com.ServiceRequest -->
      <class name="prac1.com.Procedure">
        <test-method signature="Test_Case1()[pri:1, instance:prac1.com.Procedure@60737b23]" started-at="2022-09-16T11:27:36 IST" name="Test_Case1" finished-at="2022-09-16T11:27:38 IST" duration-ms="1359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case1 -->
        <test-method signature="Test_Case2()[pri:2, instance:prac1.com.Procedure@60737b23]" started-at="2022-09-16T11:27:38 IST" name="Test_Case2" finished-at="2022-09-16T11:27:39 IST" duration-ms="1311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case2 -->
        <test-method signature="Test_Case3()[pri:3, instance:prac1.com.Procedure@60737b23]" started-at="2022-09-16T11:27:39 IST" name="Test_Case3" finished-at="2022-09-16T11:27:40 IST" duration-ms="1295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case3 -->
        <test-method signature="Test_Case4()[pri:4, instance:prac1.com.Procedure@60737b23]" started-at="2022-09-16T11:27:40 IST" name="Test_Case4" finished-at="2022-09-16T11:27:41 IST" duration-ms="1250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case4 -->
        <test-method signature="Test_Case5()[pri:5, instance:prac1.com.Procedure@60737b23]" started-at="2022-09-16T11:27:41 IST" name="Test_Case5" finished-at="2022-09-16T11:27:43 IST" duration-ms="1313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case5 -->
        <test-method signature="Test_Case6()[pri:6, instance:prac1.com.Procedure@60737b23]" started-at="2022-09-16T11:27:43 IST" name="Test_Case6" finished-at="2022-09-16T11:27:44 IST" duration-ms="1290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case6 -->
        <test-method signature="Test_Case7()[pri:7, instance:prac1.com.Procedure@60737b23]" started-at="2022-09-16T11:27:44 IST" name="Test_Case7" finished-at="2022-09-16T11:27:45 IST" duration-ms="1312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case7 -->
        <test-method signature="Test_Case8()[pri:8, instance:prac1.com.Procedure@60737b23]" started-at="2022-09-16T11:27:45 IST" name="Test_Case8" finished-at="2022-09-16T11:27:47 IST" duration-ms="1482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case8 -->
        <test-method signature="Test_Case9()[pri:9, instance:prac1.com.Procedure@60737b23]" started-at="2022-09-16T11:27:47 IST" name="Test_Case9" finished-at="2022-09-16T11:27:48 IST" duration-ms="1507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case9 -->
        <test-method signature="Test_Case10()[pri:10, instance:prac1.com.Procedure@60737b23]" started-at="2022-09-16T11:27:48 IST" name="Test_Case10" finished-at="2022-09-16T11:27:50 IST" duration-ms="1452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case10 -->
      </class> <!-- prac1.com.Procedure -->
      <class name="prac1.com.Encounter">
        <test-method signature="Test_Case1()[pri:1, instance:prac1.com.Encounter@20e6c4dc]" started-at="2022-09-16T11:27:22 IST" name="Test_Case1" finished-at="2022-09-16T11:27:24 IST" duration-ms="1448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case1 -->
        <test-method signature="Test_Case2()[pri:2, instance:prac1.com.Encounter@20e6c4dc]" started-at="2022-09-16T11:27:24 IST" name="Test_Case2" finished-at="2022-09-16T11:27:25 IST" duration-ms="1344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case2 -->
        <test-method signature="Test_Case3()[pri:3, instance:prac1.com.Encounter@20e6c4dc]" started-at="2022-09-16T11:27:25 IST" name="Test_Case3" finished-at="2022-09-16T11:27:26 IST" duration-ms="1590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case3 -->
        <test-method signature="Test_Case4()[pri:4, instance:prac1.com.Encounter@20e6c4dc]" started-at="2022-09-16T11:27:26 IST" name="Test_Case4" finished-at="2022-09-16T11:27:28 IST" duration-ms="1621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case4 -->
        <test-method signature="Test_Case5()[pri:5, instance:prac1.com.Encounter@20e6c4dc]" started-at="2022-09-16T11:27:28 IST" name="Test_Case5" finished-at="2022-09-16T11:27:29 IST" duration-ms="1382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case5 -->
        <test-method signature="Test_Case6()[pri:6, instance:prac1.com.Encounter@20e6c4dc]" started-at="2022-09-16T11:27:29 IST" name="Test_Case6" finished-at="2022-09-16T11:27:31 IST" duration-ms="1348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case6 -->
        <test-method signature="Test_Case7()[pri:7, instance:prac1.com.Encounter@20e6c4dc]" started-at="2022-09-16T11:27:31 IST" name="Test_Case7" finished-at="2022-09-16T11:27:32 IST" duration-ms="1313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case7 -->
        <test-method signature="Test_Case8()[pri:8, instance:prac1.com.Encounter@20e6c4dc]" started-at="2022-09-16T11:27:32 IST" name="Test_Case8" finished-at="2022-09-16T11:27:34 IST" duration-ms="1380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case8 -->
        <test-method signature="Test_Case9()[pri:9, instance:prac1.com.Encounter@20e6c4dc]" started-at="2022-09-16T11:27:34 IST" name="Test_Case9" finished-at="2022-09-16T11:27:35 IST" duration-ms="1311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case9 -->
        <test-method signature="Test_Case10()[pri:10, instance:prac1.com.Encounter@20e6c4dc]" started-at="2022-09-16T11:27:35 IST" name="Test_Case10" finished-at="2022-09-16T11:27:36 IST" duration-ms="1282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case10 -->
      </class> <!-- prac1.com.Encounter -->
      <class name="prac1.com.Patient">
        <test-method signature="Test_Case1()[pri:1, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:24:58 IST" name="Test_Case1" finished-at="2022-09-16T11:25:01 IST" duration-ms="2264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case1 -->
        <test-method signature="Test_Case2()[pri:2, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:01 IST" name="Test_Case2" finished-at="2022-09-16T11:25:02 IST" duration-ms="1384" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at prac1.com.Common_Method.get(Common_Method.java:23)
at prac1.com.Patient.Test_Case2(Patient.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case2 -->
        <test-method signature="Test_Case3()[pri:3, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:02 IST" name="Test_Case3" finished-at="2022-09-16T11:25:05 IST" duration-ms="2910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case3 -->
        <test-method signature="Test_Case4()[pri:4, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:05 IST" name="Test_Case4" finished-at="2022-09-16T11:25:07 IST" duration-ms="2025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case4 -->
        <test-method signature="Test_Case5()[pri:5, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:07 IST" name="Test_Case5" finished-at="2022-09-16T11:25:09 IST" duration-ms="1681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case5 -->
        <test-method signature="Test_Case6()[pri:6, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:09 IST" name="Test_Case6" finished-at="2022-09-16T11:25:10 IST" duration-ms="1247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case6 -->
        <test-method signature="Test_Case7()[pri:7, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:10 IST" name="Test_Case7" finished-at="2022-09-16T11:25:12 IST" duration-ms="1775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case7 -->
        <test-method signature="Test_Case8()[pri:8, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:12 IST" name="Test_Case8" finished-at="2022-09-16T11:25:13 IST" duration-ms="1342" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at prac1.com.Common_Method.get(Common_Method.java:23)
at prac1.com.Patient.Test_Case8(Patient.java:110)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case8 -->
        <test-method signature="Test_Case9()[pri:9, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:13 IST" name="Test_Case9" finished-at="2022-09-16T11:25:14 IST" duration-ms="1528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case9 -->
        <test-method signature="Test_Case10()[pri:10, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:14 IST" name="Test_Case10" finished-at="2022-09-16T11:25:16 IST" duration-ms="1328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case10 -->
        <test-method signature="Test_Case11()[pri:11, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:16 IST" name="Test_Case11" finished-at="2022-09-16T11:25:18 IST" duration-ms="1692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case11 -->
        <test-method signature="Test_Case12()[pri:12, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:18 IST" name="Test_Case12" finished-at="2022-09-16T11:25:19 IST" duration-ms="1326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case12 -->
        <test-method signature="Test_Case13()[pri:13, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:19 IST" name="Test_Case13" finished-at="2022-09-16T11:25:20 IST" duration-ms="1342" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at prac1.com.Common_Method.get(Common_Method.java:23)
at prac1.com.Patient.Test_Case13(Patient.java:168)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case13 -->
        <test-method signature="Test_Case14()[pri:14, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:20 IST" name="Test_Case14" finished-at="2022-09-16T11:25:23 IST" duration-ms="2338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case14 -->
        <test-method signature="Test_Case15()[pri:15, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:23 IST" name="Test_Case15" finished-at="2022-09-16T11:25:24 IST" duration-ms="1854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case15 -->
        <test-method signature="Test_Case16()[pri:16, instance:prac1.com.Patient@2c2db130]" started-at="2022-09-16T11:25:24 IST" name="Test_Case16" finished-at="2022-09-16T11:25:26 IST" duration-ms="1997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case16 -->
      </class> <!-- prac1.com.Patient -->
      <class name="prac1.com.Condition">
        <test-method signature="Test_Case1()[pri:1, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:26 IST" name="Test_Case1" finished-at="2022-09-16T11:25:28 IST" duration-ms="2031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case1 -->
        <test-method signature="Test_Case2()[pri:2, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:28 IST" name="Test_Case2" finished-at="2022-09-16T11:25:30 IST" duration-ms="1325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case2 -->
        <test-method signature="Test_Case3()[pri:3, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:30 IST" name="Test_Case3" finished-at="2022-09-16T11:25:31 IST" duration-ms="1585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case3 -->
        <test-method signature="Test_Case4()[pri:4, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:31 IST" name="Test_Case4" finished-at="2022-09-16T11:25:33 IST" duration-ms="1766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case4 -->
        <test-method signature="Test_Case5()[pri:5, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:33 IST" name="Test_Case5" finished-at="2022-09-16T11:25:35 IST" duration-ms="1490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case5 -->
        <test-method signature="Test_Case6()[pri:6, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:35 IST" name="Test_Case6" finished-at="2022-09-16T11:25:36 IST" duration-ms="1418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case6 -->
        <test-method signature="Test_Case7()[pri:7, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:36 IST" name="Test_Case7" finished-at="2022-09-16T11:25:38 IST" duration-ms="1651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case7 -->
        <test-method signature="Test_Case8()[pri:8, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:38 IST" name="Test_Case8" finished-at="2022-09-16T11:25:39 IST" duration-ms="1414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case8 -->
        <test-method signature="Test_Case9()[pri:9, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:39 IST" name="Test_Case9" finished-at="2022-09-16T11:25:41 IST" duration-ms="1754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case9 -->
        <test-method signature="Test_Case10()[pri:10, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:41 IST" name="Test_Case10" finished-at="2022-09-16T11:25:43 IST" duration-ms="1622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case10 -->
        <test-method signature="Test_Case11()[pri:11, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:43 IST" name="Test_Case11" finished-at="2022-09-16T11:25:44 IST" duration-ms="1604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case11 -->
        <test-method signature="Test_Case12()[pri:12, instance:prac1.com.Condition@327c7bea]" started-at="2022-09-16T11:25:44 IST" name="Test_Case12" finished-at="2022-09-16T11:25:46 IST" duration-ms="1759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case12 -->
      </class> <!-- prac1.com.Condition -->
      <class name="prac1.com.Immunization">
        <test-method signature="Test_Case1()[pri:1, instance:prac1.com.Immunization@4d2a1da3]" started-at="2022-09-16T11:27:50 IST" name="Test_Case1" finished-at="2022-09-16T11:27:52 IST" duration-ms="1817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case1 -->
        <test-method signature="Test_Case2()[pri:2, instance:prac1.com.Immunization@4d2a1da3]" started-at="2022-09-16T11:27:52 IST" name="Test_Case2" finished-at="2022-09-16T11:27:53 IST" duration-ms="1552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case2 -->
        <test-method signature="Test_Case3()[pri:3, instance:prac1.com.Immunization@4d2a1da3]" started-at="2022-09-16T11:27:53 IST" name="Test_Case3" finished-at="2022-09-16T11:27:55 IST" duration-ms="1525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case3 -->
        <test-method signature="Test_Case4()[pri:4, instance:prac1.com.Immunization@4d2a1da3]" started-at="2022-09-16T11:27:55 IST" name="Test_Case4" finished-at="2022-09-16T11:27:56 IST" duration-ms="1421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case4 -->
        <test-method signature="Test_Case5()[pri:5, instance:prac1.com.Immunization@4d2a1da3]" started-at="2022-09-16T11:27:56 IST" name="Test_Case5" finished-at="2022-09-16T11:27:58 IST" duration-ms="1775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case5 -->
        <test-method signature="Test_Case6()[pri:6, instance:prac1.com.Immunization@4d2a1da3]" started-at="2022-09-16T11:27:58 IST" name="Test_Case6" finished-at="2022-09-16T11:27:59 IST" duration-ms="1572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case6 -->
        <test-method signature="Test_Case7()[pri:7, instance:prac1.com.Immunization@4d2a1da3]" started-at="2022-09-16T11:27:59 IST" name="Test_Case7" finished-at="2022-09-16T11:28:01 IST" duration-ms="1510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Case7 -->
      </class> <!-- prac1.com.Immunization -->
      <class name="prac1.com.TestCases">
        <test-method signature="ResourceType_AllergyIntolerance()[pri:0, instance:prac1.com.TestCases@348d18a3]" started-at="2022-09-16T11:25:46 IST" name="ResourceType_AllergyIntolerance" finished-at="2022-09-16T11:25:54 IST" duration-ms="8614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourceType_AllergyIntolerance -->
        <test-method signature="ResourceType_Encounter()[pri:0, instance:prac1.com.TestCases@348d18a3]" started-at="2022-09-16T11:25:55 IST" name="ResourceType_Encounter" finished-at="2022-09-16T11:26:12 IST" duration-ms="17103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourceType_Encounter -->
        <test-method signature="ResourceType_Immunization()[pri:0, instance:prac1.com.TestCases@348d18a3]" started-at="2022-09-16T11:26:12 IST" name="ResourceType_Immunization" finished-at="2022-09-16T11:26:22 IST" duration-ms="10513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourceType_Immunization -->
        <test-method signature="ResourceType_Procedure()[pri:0, instance:prac1.com.TestCases@348d18a3]" started-at="2022-09-16T11:26:22 IST" name="ResourceType_Procedure" finished-at="2022-09-16T11:26:39 IST" duration-ms="16919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourceType_Procedure -->
      </class> <!-- prac1.com.TestCases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
